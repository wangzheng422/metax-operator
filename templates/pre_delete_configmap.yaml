apiVersion: v1
kind: ConfigMap
metadata:
  name: pre-delete-configmap
  namespace: {{ .Release.Namespace }}
data:
  check_metax_pods.sh: |
    #!/bin/bash

    NAMESPACE="{{ .Release.Namespace }}"
    CURRENT_POD_NAME=$(hostname)

    PODS=$(kubectl get pods -n $NAMESPACE --no-headers=true 2>/dev/null | awk -v current="$CURRENT_POD_NAME" '/^metax-operator-/ && $1 != current {print $1}')

    if [ -z "$PODS" ]; then
      echo "cannot get metax-operator controller's pod"
    else
      for POD in $PODS; do
        POD_PHASE=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.status.phase}' 2>/dev/null)

        RUNNING_STATE=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.status.containerStatuses[0].state.running}' 2>/dev/null)

        if [ -z "$RUNNING_STATE" ]; then
          WAITING_REASON=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.status.containerStatuses[0].state.waiting.reason}' 2>/dev/null)
          TERMINATED_REASON=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.status.containerStatuses[0].state.terminated.reason}' 2>/dev/null)
          EXIT_CODE=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.status.containerStatuses[0].state.terminated.exitCode}' 2>/dev/null)

          if [ -n "$WAITING_REASON" ]; then
            CONTAINER_STATE_TYPE="waiting"
            CONTAINER_REASON="$WAITING_REASON"
          elif [ -n "$TERMINATED_REASON" ]; then
            CONTAINER_STATE_TYPE="terminated"
            CONTAINER_REASON="$TERMINATED_REASON"
            if [ "$EXIT_CODE" != "0" ] && [ -n "$EXIT_CODE" ]; then
              CONTAINER_REASON="$CONTAINER_REASON (ExitCode: $EXIT_CODE)"
            fi
          else
            CONTAINER_STATE_TYPE="unknown"
          fi
        else
          CONTAINER_STATE_TYPE="running"
        fi
        if [ "$POD_PHASE" != "Running" ] || [ "$CONTAINER_STATE_TYPE" != "running" ]; then
          if POD_UID=$(kubectl get pod -n $NAMESPACE $POD -o jsonpath='{.metadata.uid}' 2>/dev/null); then
            MESSAGE=$(echo "metax-operator is in an abnormal state, please manually clear cr(cluster-operator) resource's finalizer")
            echo $MESSAGE
            EVENT_FILE=$(mktemp)
            CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            printf "apiVersion: v1\nkind: Event\nmetadata:\n  namespace: %s\n  generateName: pre-delete-hook-\ntype: Warning\nreason: PodStatusAbnormal\nmessage: %s\nsource:\n  component: pre-delete-hook\nfirstTimestamp: %s\nlastTimestamp: %s\ninvolvedObject:\n  apiVersion: v1\n  kind: Pod\n  name: %s\n  uid: %s\n  namespace: %s\n" "$NAMESPACE" "$MESSAGE" "$CURRENT_TIME" "$CURRENT_TIME" "$POD" "$POD_UID" "$NAMESPACE" > "$EVENT_FILE"
            kubectl create -f "$EVENT_FILE" 2>&1
            rm -f "$EVENT_FILE"
          fi
        fi
      done
    fi
